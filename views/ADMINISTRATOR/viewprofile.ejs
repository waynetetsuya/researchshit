<!DOCTYPE html>
<html>
<head>
  <title>Admin Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    /* ── Reset & Base ───────────────────────────────────────────────────── */
    * { margin:0; padding:0; box-sizing:border-box; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
    body { display:flex; min-height:100vh; background:#1a1a1a; color:#fff; }
    .sidebar { width:240px; background:#222; padding:20px 0; display:flex; flex-direction:column; }
    .logo-container { display:flex; justify-content:center; align-items:center; padding:10px 0; }
    .logo-container img { max-width:80%; height:auto; }
    .nav-item { display:flex; align-items:center; padding:15px 25px; color:#aaa; text-decoration:none; margin:5px 0; transition:all .3s; }
    .nav-item.active, .nav-item:hover { background:#333; color:#fff; border-radius:5px; margin:5px 10px; }
    .nav-icon { margin-right:10px; font-size:20px; }
    .main-content { flex:1; display:flex; flex-direction:column; }
    .header { display:flex; justify-content:space-between; align-items:center; padding:15px 20px; background:#202020; border-bottom:1px solid #333; }
    .page-title { font-size:18px; font-weight:normal; }
    .user-info { display:flex; align-items:center; }
    .user-name { margin-right:15px; text-align:right; }
    .user-role { background:#2c5a43; color:#fff; padding:4px 8px; border-radius:4px; font-size:12px; }
    .user-avatar { width:50px; height:50px; background:#fff; border-radius:50%; display:flex; justify-content:center; align-items:center; }
    .content { flex:1; padding:20px; }
    .back-button { margin-bottom:20px; }
    .back-link svg { width:24px; height:24px; }

    /* ── Professor Card & Status Boxes ───────────────────────────────────── */
    .professor-card { background:#262626; margin:0 20px 20px; border-radius:10px; padding:20px; }
    .professor-info { display:flex; align-items:center; margin-bottom:20px; }
    .professor-avatar { width:60px; height:60px; background:#333; border-radius:50%; display:flex; justify-content:center; align-items:center; margin-right:20px; }
    .professor-name { font-size:20px; margin-bottom:5px; }
    .email { color:#aaa; }
    .status-boxes, .status-boxes1 { display:flex; gap:20px; margin-bottom:20px; }
    .status-box { flex:1; background:#333; border-radius:10px; padding:15px; display:flex; align-items:center; }
    .status-icon { width:40px; height:40px; background:#444; border-radius:50%; display:flex; justify-content:center; align-items:center; margin-right:15px; }
    .status-info { flex:1; }
    .status-label { font-size:12px; color:#aaa; margin-bottom:5px; }
    .status-value { font-size:14px; }

    /* ── Attendance History Cards ────────────────────────────────────────── */
    .attendance-history { background:#262626; border-radius:10px; padding:20px; margin:0 20px 20px; }
    .attendance-history h3 { color:#fff; margin-bottom:15px; font-size:16px; }
    .history-controls { display:flex; align-items:center; gap:10px; margin-bottom:10px; }
    .attendance-records {
      display:grid;
      grid-template-columns:repeat(auto-fill, minmax(240px, 1fr));
      gap:20px;
      margin-top:10px;
    }
    .attendance-record { background:#333; border-radius:10px; padding:15px; }
    .record-header {
      display:flex; justify-content:space-between; align-items:center; margin-bottom:12px;
    }
    .record-date { font-size:14px; color:#eee; }
    .status-badge {
      padding:4px 10px; border-radius:12px; font-size:12px; font-weight:bold; text-transform:uppercase;
    }
    .status-on-time { background:#4caf50; color:#fff; }
    .status-late    { background:#ffc107; color:#000; }
    .status-absent  { background:#f44336; color:#fff; }
    .record-times {
      display:flex; justify-content:space-between; font-size:14px; color:#ddd;
    }
    .record-times div { width:48%; }
    .record-times strong { display:block; margin-bottom:4px; }

    @media (max-width:768px) {
      .sidebar { width:70px; }
      .nav-item span { display:none; }
      .nav-icon { margin-right:0; }
    }
  </style>
</head>
<body>
  <!-- Sidebar -->
  <div class="sidebar">
    <div class="logo-container">
      <img src="/IMAGES/CEULOGO.png" alt="Logo">
    </div>
    <a href="/dashboard/admin" class="nav-item"><div class="nav-icon">⊞</div><span>Dashboard</span></a>
    <a href="/admin/professors" class="nav-item active"><div class="nav-icon">👨‍🏫</div><span>Professors</span></a>
    <div style="flex:1"></div>
    <a href="/settings" class="nav-item"><div class="nav-icon">⚙️</div><span>Settings</span></a>
    <a href="/logout" class="nav-item"><div class="nav-icon">🚪</div><span>Log Out</span></a>
    <a href="/help" class="nav-item"><div class="nav-icon">❓</div><span>Help</span></a>
  </div>

  <!-- Main Content -->
  <div class="main-content">
    <!-- Header -->
    <div class="header">
      <h2 class="page-title">Professor Profile</h2>
      <div class="user-info">
        <div class="user-name">
          <%= user.username.toUpperCase() %><br>
          <span class="user-role"><%= user.role.toUpperCase() %></span>
        </div>
        <div class="user-avatar">
          <svg viewBox="0 0 24 24" fill="none" stroke="black" stroke-width="2">
            <circle cx="12" cy="8" r="5"></circle>
            <path d="M3 21v-2a7 7 0 0114 0v2"></path>
          </svg>
        </div>
      </div>
    </div>

    <div class="content">
      <!-- Back Button -->
      <div class="back-button">
        <a href="/professors" class="back-link">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" width="24" height="24">
            <path d="M19 12H5M12 19l-7-7 7-7"></path>
          </svg>
        </a>
      </div>

      <!-- Profile Card -->
      <div class="professor-card">
        <div class="professor-info">
          <div class="professor-avatar">
            <svg viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2">
              <circle cx="12" cy="8" r="5"></circle>
              <path d="M3 21v-2a7 7 0 0114 0v2"></path>
            </svg>
          </div>
          <div class="professor-details">
            <div class="professor-name"><%= professor.firstname %> <%= professor.lastname %></div>
            <div class="email"><%= professor.email %></div>
          </div>
        </div>

        <!-- Live Tracking Boxes -->
        <div class="status-boxes">
          <div class="status-box">
            <div class="status-icon"><i class="fas fa-door-open"></i></div>
            <div class="status-info">
              <div class="status-label">Room</div>
              <div class="status-value" id="live-room"><%= professor.room || '301' %></div>
            </div>
          </div>
          <div class="status-box">
            <div class="status-icon"><i class="fas fa-signal"></i></div>
            <div class="status-info">
              <div class="status-label">RSSI (dBm)</div>
              <div class="status-value" id="live-rssi-raw">--</div>
            </div>
          </div>
          <div class="status-box">
            <div class="status-icon"><i class="fas fa-filter"></i></div>
            <div class="status-info">
              <div class="status-label">Filtered RSSI (dBm)</div>
              <div class="status-value" id="live-filtered-rssi">--</div>
            </div>
          </div>
          <div class="status-box">
            <div class="status-icon"><i class="fas fa-ruler"></i></div>
            <div class="status-info">
              <div class="status-label">Distance (m)</div>
              <div class="status-value" id="live-distance">--</div>
            </div>
          </div>
          <div class="status-box">
            <div class="status-icon"><i class="fas fa-circle-notch"></i></div>
            <div class="status-info">
              <div class="status-label">State</div>
              <div class="status-value" id="live-state">--</div>
            </div>
          </div>
        </div>

        <!-- Check-In / Check-Out Boxes -->
        <div class="status-boxes1">
          <div class="status-box">
            <div class="status-icon"><i class="fas fa-sign-in-alt"></i></div>
            <div class="status-info">
              <div class="status-label">Time In</div>
              <div class="status-value" id="live-checkin">--:--:--</div>
            </div>
          </div>
          <div class="status-box">
            <div class="status-icon"><i class="fas fa-sign-out-alt"></i></div>
            <div class="status-info">
              <div class="status-label">Time Out</div>
              <div class="status-value" id="live-checkout">--:--:--</div>
            </div>
          </div>
        </div>

<!-- Attendance History Panel -->
<div class="attendance-history">
  <h3>Attendance History</h3>

  <!-- ← NEW SUMMARY COUNTERS -->
  <div class="attendance-summary">
    <div>Check-ins: <span id="hist-checkins">0</span></div>
    <div>Check-outs: <span id="hist-checkouts">0</span></div>
  </div>

  <div class="history-controls">
    <label><input type="checkbox" id="filter-absent"> Absent only</label>
    <button id="sort-button">Sort</button>
    <button id="filter-button">Filter</button>
  </div>
  <div id="history-records" class="attendance-records">
    <!-- cards go here -->
  </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Socket.IO & Live Update Script -->
 <script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();

  // Live RSSI updates
  socket.on('rssiUpdate', data => {
    document.getElementById('live-rssi-raw').innerText       = data.raw + ' dBm';
    document.getElementById('live-filtered-rssi').innerText = data.filtered.toFixed(2) + ' dBm';
    document.getElementById('live-distance').innerText      = data.distance.toFixed(2);
    document.getElementById('live-state').innerText         = data.state;
  });

  // Live attendance updates (checkin / checkout)
  socket.on('attendanceUpdate', data => {
    const timeStr = new Date(data.timestamp).toLocaleTimeString();
    if (data.event === 'checkin') {
      document.getElementById('live-checkin').innerText = timeStr;
    } else {
      document.getElementById('live-checkout').innerText = timeStr;
    }
    // reload the history panel whenever an event arrives
    loadHistory();
  });

  // Fetch & render today’s flat history
 async function loadHistory() {
  try {
    const res    = await fetch('/api/attendance/history');
    const events = await res.json();    // flat, sorted list of {event, timestamp}

    // —— NEW: summary counts —— 
    const numCheckins  = events.filter(e => e.event === 'checkin').length;
    const numCheckouts = events.filter(e => e.event === 'checkout').length;
    document.getElementById('hist-checkins').innerText  = numCheckins;
    document.getElementById('hist-checkouts').innerText = numCheckouts;

      // group by date string
      const byDate = {};
    events.forEach(e => {
      const d   = new Date(e.timestamp);
      const key = d.toLocaleDateString('en-US', {
        month:'long', day:'numeric', year:'numeric'
      });
      (byDate[key] ||= []).push(e);
    });

    const container = document.getElementById('history-records');
    container.innerHTML = '';

    if (!Object.keys(byDate).length) {
      container.innerHTML = `
        <div class="attendance-record">
          <div class="record-header">
            <div class="record-date">No history</div>
          </div>
        </div>`;
      return;
    }

    Object.entries(byDate).forEach(([date, evts]) => {
      // pick the last checkin / checkout for this date:
      const allCIs = evts.filter(x => x.event === 'checkin');
      const allCOs = evts.filter(x => x.event === 'checkout');
      const ci = allCIs.length ? allCIs[allCIs.length - 1] : null;
      const co = allCOs.length ? allCOs[allCOs.length - 1] : null;

      let cls = 'status-on-time', txt = 'On Time';
      if (!co)                     { cls = 'status-absent'; txt = 'Absent'; }
      else if ((co.timestamp - ci.timestamp) > 90*60*1000) {
                                     cls = 'status-late';   txt = 'Late';   }

      const card = document.createElement('div');
      card.className = 'attendance-record';
      card.innerHTML = `
        <div class="record-header">
          <div class="record-date">${date}</div>
          <div class="status-badge ${cls}">${txt}</div>
        </div>
        <div class="record-times">
          <div>
            <strong>Check In Time</strong><br>
            ${ ci ? new Date(ci.timestamp).toLocaleTimeString() : '--:--' }
          </div>
          <div>
            <strong>Check Out Time</strong><br>
            ${ co ? new Date(co.timestamp).toLocaleTimeString() : '--:--' }
          </div>
        </div>`;
      container.appendChild(card);
    });

  } catch (e) {
    console.error('Failed to load history:', e);
  }
}

// initial load & on every new event
loadHistory();
socket.on('attendanceUpdate', loadHistory);

</script>
</body>
</html>
